#!/usr/bin/env python3
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) Robert Oschwald 2019             
# (c) Mathias Kettner 2014 mk@mathias-kettner.de

# Check for Cisco Small Business Switch FANs.
# Based on cisco_fan by Mathias Kettner.
#
# We probe sysDescr.0 (default, probably already cached) for "switch"
# and CISCOSB-Physicaldescription-MIB::rlPhdUnitGenParamManufacturer.1 for "cisco",
# as this MIB is available on SB Switches (like SG300 Series), only.
# The fans itself are on the following OIDs:
# .1.3.6.1.4.1.9.6.1.101.83.1.1.1.2.67109249 = STRING: fan1_unit1
# .1.3.6.1.4.1.9.6.1.101.83.1.1.1.2.67109250 = STRING: fan2_unit1
# .1.3.6.1.4.1.9.6.1.101.83.1.1.1.2.67109251 = STRING: fan3_unit1
# .1.3.6.1.4.1.9.6.1.101.83.1.1.1.2.67109252 = STRING: fan4_unit1
# .1.3.6.1.4.1.9.6.1.101.83.1.1.1.3.67109249 = INTEGER: normal(1)
# .1.3.6.1.4.1.9.6.1.101.83.1.1.1.3.67109250 = INTEGER: notFunctioning(6)
# .1.3.6.1.4.1.9.6.1.101.83.1.1.1.3.67109251 = INTEGER: normal(1)
# .1.3.6.1.4.1.9.6.1.101.83.1.1.1.3.67109252 = INTEGER: notPresent(5)
#
# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  This file is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file LICENSE.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# NOTE: Careful when replacing the *-import below with a more specific import. This can cause
# problems because it might remove variables from the check-context which are necessary for
# resolving legacy discovery results such as [("SUMMARY", "diskstat_default_levels")]. Furthermore,
# it might also remove variables needed for accessing discovery rulesets.
from cmk.base.check_legacy_includes.cisco_sensor_item import *  # pylint: disable=wildcard-import,unused-wildcard-import

cisco_fan_states = ('', 'normal', 'warning', 'critical',
                    'shutdown', 'notPresent', 'notFunctioning')

def inventory_cisco_sb_fan(info):
    # return [ (line[0], None) for line in info if line[1] != '5' ]
    return [ (cisco_sensor_item(line[0],line[-1]), None) for line in info if line[1] != '5' ]

def check_cisco_sb_fan(item, params, info):
    for statustext, state, oid_end in info:
        if cisco_sensor_item(statustext, oid_end) == item:
            state = int(state)
            if state == 1:
                return (0, "State is: %s (%d)" % (cisco_fan_states[state], state))
            elif state == 2:
                return (1, "State is %s (%d)" % (cisco_fan_states[state], state))
            else:
                return (2, "State is %s (%d)" % (cisco_fan_states[state], state))
    return (3, "item not found in snmp data")

check_info["cisco_sb_fan"] = {
    'check_function':          check_cisco_sb_fan,
    'inventory_function':      inventory_cisco_sb_fan,
    'service_description':     'FAN %s',
    'snmp_info':               ('.1.3.6.1.4.1.9.6.1.101.83.1.1.1', ['2', '3', OID_END]),
    'snmp_scan_function': \
        lambda oid: "switch" in oid(".1.3.6.1.2.1.1.1.0").lower() \
                     and oid(".1.3.6.1.4.1.9.6.1.101.53.14.1.10.1") is not None \
                     and "cisco" in oid(".1.3.6.1.4.1.9.6.1.101.53.14.1.10.1").lower(),
}
